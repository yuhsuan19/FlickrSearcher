//
//  PhotoWallViewController.swift
//  FlickrSearcher
//
//  Created by CHI on 2020/1/26.
//  Copyright (c) 2020 CHI. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PKHUD

protocol PhotoWallDisplayLogic: class {
    func displayLoadPhotos(viewModel: PhotoWall.LoadPhotos.ViewModel)
}

class PhotoWallViewController: UIViewController, PhotoWallDisplayLogic {
    var interactor: PhotoWallBusinessLogic?
    var router: (NSObjectProtocol & PhotoWallRoutingLogic & PhotoWallDataPassing)?
    let keyword: String
    let countPerPage: Int

    // MARK: Object lifecycle
    init(keyword: String, countPerPage: Int) {
        self.keyword = keyword
        self.countPerPage = countPerPage
        super.init(nibName: nil, bundle: nil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        self.keyword = ""
        self.countPerPage = 100
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = PhotoWallInteractor(keyword: keyword, countPerPage: countPerPage)
        let presenter = PhotoWallPresenter()
        let router = PhotoWallRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setUpAndLayoutViews()
        loadPhotos()
    }
    
    private func setUpAndLayoutViews() {
        view.backgroundColor = .systemBackground
    }
    
    private func loadPhotos() {
        HUD.show(.labeledProgress(title: nil, subtitle: "讀取中..."))
        let request = PhotoWall.LoadPhotos.Request()
        interactor?.loadPhotos(request: request)
    }
    
    // MARK: Display logics
    func displayLoadPhotos(viewModel: PhotoWall.LoadPhotos.ViewModel) {
        
    }
}
